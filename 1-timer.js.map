{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('button');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nbuttonEl.setAttribute('disabled', true);\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log('Обрана дата:', userSelectedDate);\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        message: 'Обери дату в майбутньому',\n        balloon: true,\n        position: 'topRight',\n      });\n\n      buttonEl.setAttribute('disabled', true);\n    } else {\n      buttonEl.removeAttribute('disabled');\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbuttonEl.addEventListener('click', () => {\n  buttonEl.setAttribute('disabled', true);\n  inputEl.setAttribute('disabled', true);\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  function zeroWriter(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  timerId = setInterval(() => {\n    let needWaitTime = userSelectedDate - Date.now();\n\n    if (needWaitTime <= 0) {\n      clearInterval(timerId);\n      inputEl.removeAttribute('disabled');\n    }\n    convertMs(needWaitTime);\n    const { days, hours, minutes, seconds } = convertMs(needWaitTime);\n    daysEl.textContent = zeroWriter(days);\n    hoursEl.textContent = zeroWriter(hours);\n    minutesEl.textContent = zeroWriter(minutes);\n    secondsEl.textContent = zeroWriter(seconds);\n  }, 1000);\n});\n"],"names":["inputEl","buttonEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","zeroWriter","value","needWaitTime"],"mappings":"2GAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,aAAa,WAAY,EAAI,EAEtC,IAAIK,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClC,QAAQ,IAAI,eAAgBH,CAAgB,EAExCA,GAAoB,IAAI,MAC1BI,EAAS,MAAM,CACb,QAAS,2BACT,QAAS,GACT,SAAU,UAClB,CAAO,EAEDT,EAAS,aAAa,WAAY,EAAI,GAEtCA,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEAU,EAAUX,EAASQ,CAAO,EAE1BP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,aAAa,WAAY,EAAI,EACtCD,EAAQ,aAAa,WAAY,EAAI,EACrC,SAASY,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAASC,EAAWC,EAAO,CACzB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEDZ,EAAU,YAAY,IAAM,CAC1B,IAAIa,EAAed,EAAmB,KAAK,IAAG,EAE1Cc,GAAgB,IAClB,cAAcb,CAAO,EACrBP,EAAQ,gBAAgB,UAAU,GAGpC,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAY,EAChElB,EAAO,YAAcgB,EAAWJ,CAAI,EACpCX,EAAQ,YAAce,EAAWH,CAAK,EACtCX,EAAU,YAAcc,EAAWF,CAAO,EAC1CX,EAAU,YAAca,EAAWD,CAAO,CAC3C,EAAE,GAAI,CACT,CAAC"}